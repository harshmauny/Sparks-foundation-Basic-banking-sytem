[{"D:\\hackathons and projects\\Spark_Bank_UI\\bankui\\src\\index.js":"1","D:\\hackathons and projects\\Spark_Bank_UI\\bankui\\src\\App.js":"2","D:\\hackathons and projects\\Spark_Bank_UI\\bankui\\src\\reportWebVitals.js":"3","D:\\hackathons and projects\\Spark_Bank_UI\\bankui\\src\\components\\viewCustomers.comonent.js":"4","D:\\hackathons and projects\\Spark_Bank_UI\\bankui\\src\\components\\homePage.component.js":"5","D:\\hackathons and projects\\Spark_Bank_UI\\bankui\\src\\components\\viewTransaction.component.js":"6","D:\\hackathons and projects\\Spark_Bank_UI\\bankui\\src\\components\\transfer.component.js":"7","D:\\hackathons and projects\\Spark_Bank_UI\\bankui\\src\\components\\NavBar.component.js":"8"},{"size":500,"mtime":1607444105915,"results":"9","hashOfConfig":"10"},{"size":1122,"mtime":1607839650156,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":2014,"mtime":1607867690036,"results":"13","hashOfConfig":"10"},{"size":1431,"mtime":1607756915116,"results":"14","hashOfConfig":"10"},{"size":2779,"mtime":1607867704252,"results":"15","hashOfConfig":"10"},{"size":3972,"mtime":1607867731011,"results":"16","hashOfConfig":"10"},{"size":220,"mtime":1607592719419,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"17y0o7m",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"D:\\hackathons and projects\\Spark_Bank_UI\\bankui\\src\\index.js",[],["39","40"],"D:\\hackathons and projects\\Spark_Bank_UI\\bankui\\src\\App.js",["41"],"import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport './App.css';\n\nimport HomePage from \"./components/homePage.component\";\nimport ViewCustomers from \"./components/viewCustomers.comonent\";\nimport ViewTransactions from \"./components/viewTransaction.component\";\nimport Transfer from \"./components/transfer.component\";\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div >\n          <nav class=\"navbar sticky-top navbar-dark bg-dark\">\n            <div class=\"container-fluid\">\n              <a class=\"navbar-brand\">Sparks Bank</a>\n              <Link to=\"/\"><button class=\"btn btn-outline-success\" >Home</button></Link>\n            </div>\n          </nav>\n        </div>\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/customers\" exact component={ViewCustomers} />\n        <Route path=\"/transactions\" exact component={ViewTransactions} />\n        <Route path=\"/transfer\" exact component={Transfer} />\n      </Router>\n    );\n  }\n}\n\nexport default App;","D:\\hackathons and projects\\Spark_Bank_UI\\bankui\\src\\reportWebVitals.js",[],"D:\\hackathons and projects\\Spark_Bank_UI\\bankui\\src\\components\\viewCustomers.comonent.js",[],"D:\\hackathons and projects\\Spark_Bank_UI\\bankui\\src\\components\\homePage.component.js",[],"D:\\hackathons and projects\\Spark_Bank_UI\\bankui\\src\\components\\viewTransaction.component.js",["42"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ListTransaction = props => (\r\n    <tr>\r\n        <th scope=\"row\">{props.index}</th>\r\n        <td>{props.senderName + \"  \"}({props.transactions.senderId})</td>\r\n        <td>{props.receiverName + \"  \"}({props.transactions.recieverId})</td>\r\n        <td>{props.transactions.transactionId}</td>\r\n        <td>{props.transactions.amount}</td>\r\n    </tr>\r\n)\r\n\r\nexport default class ViewTransactions extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            transactions: [],\r\n            customers: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        var transactionData = []\r\n        axios.get(\"https://sparks-bank-backend.herokuapp.com/transactions\")\r\n            .then(response => {\r\n                //this.setState({ transactions: response.data })\r\n                transactionData = response.data\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n\r\n        axios.get(\"https://sparks-bank-backend.herokuapp.com/users\")\r\n            .then(response => {\r\n                this.setState({ customers: response.data, transactions: transactionData })\r\n\r\n                //console.log(response.data)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    transactionFill = () => {\r\n\r\n        return this.state.transactions.map((transaction, index) => {\r\n            var SenderName = this.state.customers.find(name => {\r\n                return transaction.senderId === name._id\r\n            })\r\n            var ReceiverName = this.state.customers.find(name => {\r\n                return transaction.recieverId == name._id\r\n            })\r\n            console.log(transaction.receiver)\r\n            return <ListTransaction transactions={transaction} senderName={SenderName.name} receiverName={ReceiverName.name} key={transaction._id} index={index + 1} />\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1 className=\"transactionHeading\">Transactions</h1>\r\n\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Sender</th>\r\n                            <th scope=\"col\">Receiver</th>\r\n                            <th scope=\"col\">Transaction ID</th>\r\n                            <th scope=\"col\">Amount</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.transactionFill()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\hackathons and projects\\Spark_Bank_UI\\bankui\\src\\components\\transfer.component.js",["43"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class Transfer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sender: \"\",\r\n            receiver: \"\",\r\n            amount: \"\",\r\n            customers: [],\r\n            redirect: false\r\n        };\r\n\r\n        this.senderDropdownChange = this.senderDropdownChange.bind(this);\r\n        this.receiverDropdownChange = this.receiverDropdownChange.bind(this);\r\n    }\r\n\r\n    senderDropdownChange(e) {\r\n        this.setState({ sender: e.target.value });\r\n        console.log(this.state.sender)\r\n    }\r\n\r\n    receiverDropdownChange(e) {\r\n        this.setState({ receiver: e.target.value });\r\n        console.log(this.state.receiver)\r\n    }\r\n\r\n    updateInputValue(evt) {\r\n        this.setState({ amount: evt.target.value });\r\n    }\r\n    componentDidMount() {\r\n        axios.get(\"https://sparks-bank-backend.herokuapp.com/users\")\r\n            .then(response => {\r\n                this.setState({ customers: response.data })\r\n                console.log(response.data)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    senderFill = () => {\r\n        return this.state.customers.map((customer) => {\r\n            return <option value={customer._id}>{customer.name}</option>\r\n\r\n        })\r\n    }\r\n\r\n    receiverFill = () => {\r\n        return this.state.customers.map((customer) => {\r\n            if (this.state.sender !== customer._id)\r\n                return <option value={customer._id}>{customer.name}</option>\r\n\r\n        })\r\n    }\r\n\r\n\r\n    sendData = () => {\r\n        const transfer = {\r\n            senderId: this.state.sender,\r\n            recieverId: this.state.receiver,\r\n            amount: this.state.amount\r\n        }\r\n\r\n        axios.post('https://sparks-bank-backend.herokuapp.com/transactions', transfer)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                alert(\"Money transferred!!\");\r\n                this.setState({ redirect: true })\r\n            });\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to='/' />;\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <h1 className=\"transferHeading\">Transfer</h1>\r\n                <div className=\"transfer-form\">\r\n                    <div className=\"transfer-form-comp\">\r\n                        <label className=\"form-contol form-label\">From</label>\r\n                        <select className=\"form-control form-select\" onChange={this.senderDropdownChange}>\r\n                            <option value=\"NA\">N/A</option>\r\n                            {this.senderFill()}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"transfer-form-comp\">\r\n                        <label className=\"form-contol form-label\">To</label>\r\n                        <select className=\"form-control form-select\" onChange={this.receiverDropdownChange}>\r\n                            <option value=\"NA\">N/A</option>\r\n                            {this.receiverFill()}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"transfer-form-comp\">\r\n                        <label className=\"form-contol form-label\">Amount</label>\r\n                        <input className=\"form-control\" value={this.state.amount} onChange={evt => this.updateInputValue(evt)} />\r\n                    </div>\r\n\r\n                    <button className=\"btn btn-primary\" onClick={() => this.sendData()}>Transfer</button>\r\n\r\n                </div>\r\n\r\n                {/* <div>Sender Selected value is : {this.state.sender}</div>\r\n                <div>Receiver Selected value is : {this.state.receiver}</div>\r\n                <div>Amount is : {this.state.amount}</div> */}\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\hackathons and projects\\Spark_Bank_UI\\bankui\\src\\components\\NavBar.component.js",[],["44","45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":17,"column":15,"nodeType":"52","endLine":17,"endColumn":39},{"ruleId":"53","severity":1,"message":"54","line":51,"column":47,"nodeType":"55","messageId":"56","endLine":51,"endColumn":49},{"ruleId":"57","severity":1,"message":"58","line":52,"column":52,"nodeType":"59","messageId":"60","endLine":52,"endColumn":54},{"ruleId":"46","replacedBy":"61"},{"ruleId":"48","replacedBy":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["63"],["64"],"no-global-assign","no-unsafe-negation"]